<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cgr.lesson.mapper.SysUserRoleMapper">
  <resultMap id="BaseResultMap" type="com.cgr.lesson.entity.SysUserRole">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="ROLE_ID" jdbcType="VARCHAR" property="roleId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, USER_ID, ROLE_ID, CREATE_TIME
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from SYS_USER_ROLE
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from SYS_USER_ROLE
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.cgr.lesson.entity.SysUserRole">
    insert into SYS_USER_ROLE (ID, USER_ID, ROLE_ID, 
      CREATE_TIME)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cgr.lesson.entity.SysUserRole">
    insert into SYS_USER_ROLE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="roleId != null">
        ROLE_ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cgr.lesson.entity.SysUserRole">
    update SYS_USER_ROLE
    <set>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        ROLE_ID = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cgr.lesson.entity.SysUserRole">
    update SYS_USER_ROLE
    set USER_ID = #{userId,jdbcType=VARCHAR},
      ROLE_ID = #{roleId,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>

  <select id="getRoleIdsByUserId" resultType="java.lang.String">
    select role_id from sys_user_role
    where user_id=#{userId}
  </select>

<!--  根据用户id 删除和该用户关联的角色关联表数据-->
  <delete id="removeByUserId">
    delete from sys_user_role
    where user_id=#{userId}
  </delete>

<!-- 批量插入用户和角色关联数据 -->
  <insert id="batchInsertUserRole" parameterType="com.cgr.lesson.entity.SysUserRole">
    INSERT into sys_user_role(
    id,
    user_id,
    role_id,
    create_time
    )
    (
    <foreach collection="list" item="item" index="index" separator=",">
      select
      #{item.id},
      #{item.userId},
      #{item.roleId},
      #{item.createTime}
      from dual
    </foreach>
    )
  </insert>

<!--  //根据角色ID集合获取用户ID集合 -->
  <select id="getUserIdsByRoleIds" resultType="java.lang.String">
     select user_id from sys_user_role
     where role_id in
     <foreach collection="list" open="(" close=")" separator="," item="item">
       #{item}
     </foreach>
  </select>

<!--  通过角色id 获取跟该角色关联的用户id-->
  <select id="getInfoByUserIdByRoleId" resultType="java.lang.String">
    select user_id from sys_user_role
     where role_id=#{roleId}
  </select>

<!-- 根据角色id 删除该角色关联菜单权限所有数据 -->
  <delete id="removeByRoleId">
     delete from sys_user_role where role_id=#{roleId}
  </delete>

</mapper>